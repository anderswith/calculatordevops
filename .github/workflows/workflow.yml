name: Workflow

on:
  push:
    branches:
      - main

jobs:
  update-config:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install required tools
        run: |
          dotnet tool install --global dotnet-reportgenerator-globaltool
          dotnet tool install --global dotnet-stryker
          dotnet tool install -g dotnet-sonarscanner
        
      - name: Application Version
        id: semver-app
        uses: paulhatch/semantic-version@v5.4.0
        with:
          bump_each_commit: true
          bump_each_commit_patch_pattern: 'bugfix'
          tag_prefix: "v"

      - name: Display Version
        run: echo "Generated version is ${{ steps.semver-app.outputs.version}}"

      - name: Run unit tests
        run: |
          dotnet test --collect:"XPlat Code Coverage" --results-directory coverage

      - name: Generate report
        run: |
          reportgenerator -reports:"TestResults/**/coverage.cobertura.xml" -targetdir:coverage-report -reporttypes:Html

      - name: Run Mutation Tests
        run: |
          dotnet stryker --threshold-high 80

      - name: Collect Coverage Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/**/coverage.cobertura.xml

      - name: Collect Stryker Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: stryker-report
          path: StrykerOutput
          
      - name: Check Secret Variables
        run: |
          echo "Sonar URL: ${{ secrets.SECRET_SONAR_URL }}"
          echo "Sonar Token: ${{ secrets.SECRET_SONAR_TOKEN }}"

      - name: Start Static Code Analysis
        run: |
          dotnet sonarscanner begin \
            /k:"AW-DevOps-Calculator" \
            /d:sonar.host.url="${{ vars.SECRET_SONAR_URL }}" \
            /d:sonar.token="${{ secrets.SECRET_SONAR_TOKEN }}" \
            /d:sonar.coverageReportPaths="coverage-report/SonarQube.xml" \
            /d:sonar.exclusions="coverage-report/**/*.html,coverage-report/**/*.css,coverage-report/**/*,DevOpsCalculator/DAL/**/*,calculator-frontend-main/**/*,**/Program.cs,e2e-tests/**/*,k6-tests/**/*" \
            /d:sonar.qualitygate.wait=true \
            /d:sonar.qualitygate.timeout=300

      - name: Build
        run: dotnet build
        
      - name: Run unit tests
        run: dotnet test --collect:"XPlat Code Coverage" --results-directory TestResults

      - name: Generate sonar report
        run: |
          reportgenerator \
          -reports:TestResults/**/coverage.cobertura.xml \
          -targetdir:coverage-report \
          -reporttypes:SonarQube

      - name: Complete Static Code Analysis
        run: |
          dotnet sonarscanner end \
            /d:sonar.token="${{secrets.SECRET_SONAR_TOKEN}}"
    
      - name: List source directory contents
        run: ls -la docker/
        
      - name: Deliver Compose file to staging server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.STAGING_SERVER_IP }}
          username: ${{ vars.STAGING_SERVER_USERNAME }}
          key: ${{ secrets.STAGING_SERVER_SSH_KEY }}
          source: "docker/docker-compose.yml"
          target: "dowa/"
          debug: true

      - name: Deliver database migrations to staging server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.STAGING_SERVER_IP }}
          username: ${{ vars.STAGING_SERVER_USERNAME }}
          key: ${{ secrets.STAGING_SERVER_SSH_KEY }}
          source: "calculatordevops/dbmigration/*"  # Corrected path
          target: "dowa/dbmigration"  # Change based on your remote structure
          overwrite: true
          debug: true
          
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release notes
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.semver-app.outputs.version }}
          generateReleaseNotes: true
          body: |
            This release includes the following container image:
            http://ghcr.io/${{ github.repository }}:${{ steps.semver-app.outputs.version }}
          
      - name: build and push docker image
        run: |
          docker build \
          -t ghcr.io/${{ github.repository }}:stagins \
          -t ghcr.io/${{ github.repository }}:${{ steps.semver-app.outputs.version}} \
          -f calculatordevops/docker/Dockerfile \
          .
          docker push ghcr.io/${{ github.repository }} --all-tags
          
        
   