on:
  push:
    branches:
      - main

jobs:
  update-config:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up SSH and deploy
        env:
          SSH_PRIVATE_KEY: ${{ secrets.STAGING_SERVER_SSH_KEY }}
          SERVER_USER: ${{ vars.STAGING_SERVER_USERNAME }}
          SERVER_IP: ${{ vars.STAGING_SERVER_IP }}
        
        run: |
          # Set up SSH key
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Add the server to known hosts to prevent "Host key verification failed"
          ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts

          # Debugging step: Check if SSH key and server details are being loaded correctly
          echo "SERVER_USER: $SERVER_USER"
          echo "SERVER_IP: $SERVER_IP"

          echo "Building Angular frontend..."
          cd calculator-frontend-main
          npm install
          npm run build --prod  # Build the Angular app for production

          # Ensure the frontend directory exists on the server
          echo "Ensuring the frontend directory exists on the staging server..."
          ssh $SERVER_USER@$SERVER_IP "mkdir -p /var/www/frontend"

          echo "Copying frontend build files to staging server..."
          scp -r dist/* $SERVER_USER@$SERVER_IP:/var/www/frontend/

          echo "Copying backend files to staging server..."
          scp -r DevOpsCalculator/* $SERVER_USER@$SERVER_IP:/home/$SERVER_USER/backend/

          # SSH into the server to set up the backend
          ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP << 'EOF'
            set -e  # Stop script if an error occurs

            # Move to the backend directory and compile
            cd /home/$SERVER_USER/backend
            dotnet publish -c Release -o ./publish

            # Run the backend application in the background
            echo "Running backend..."
            cd publish
            nohup dotnet DevOpsCalculator.dll &  # Run in the background

            # Check status of the backend
            ps aux | grep 'DevOpsCalculator.dll'

            echo "âœ… Deployment completed successfully!"
          EOF
