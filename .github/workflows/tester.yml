on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up SSH and deploy
        env:
          SSH_PRIVATE_KEY: ${{ secrets.STAGING_SERVER_SSH_KEY }}
          SERVER_USER: ${{ secrets.STAGING_SERVER_USERNAME }}
          SERVER_IP: ${{ secrets.STAGING_SERVER_IP }}
        
        run: |
          # Set up SSH key
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Build the Angular frontend for production
          echo "Building Angular frontend..."
          cd calculator-frontend-main
          npm install
          npm run build --configuration production  # Build the Angular app for production

          # Copy frontend build files to the server's wwwroot directory
          echo "Copying frontend build files to staging server..."
          scp -r dist/calculator-frontend/browser/* $SERVER_USER@$SERVER_IP:/var/www/wwwroot/

          # Copy backend files to the server
          echo "Copying backend files to staging server..."
          scp -r DevOpsCalculator/* $SERVER_USER@$SERVER_IP:/home/$SERVER_USER/backend/

          # SSH into the server and set everything up
          ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP << 'EOF'
            set -e  # Stop script if an error occurs

            # Move to the backend directory and publish the app
            cd /home/$SERVER_USER/backend
            dotnet publish -c Release -o ./publish

            # Start the backend application (example using dotnet run)
            echo "Running backend..."
            cd publish
            nohup dotnet DevOpsCalculator.dll &  # Run it in the background
          
            # Check the status of the backend service
            ps aux | grep 'DevOpsCalculator.

